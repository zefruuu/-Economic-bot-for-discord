import discord
from discord.ext import commands
import sqlite3
import random
import asyncio

intents = discord.Intents.default()
intents.messages = True 
intents.guilds = True 
intents.message_content = True  

bot = commands.Bot(command_prefix='!', intents=intents)


conn = sqlite3.connect("eso.sqlite")
cursor = conn.cursor()


cursor.execute("""CREATE TABLE IF NOT EXISTS eco (
                    user_id INTEGER PRIMARY KEY,
                    balance INTEGER,
                    bank INTEGER
                    
                )""")
conn.commit()
conn.close()

@bot.command(aliases=["bal", "–±–∞–ª–∞–Ω—Å","–±–∞–ª"])
async def balance(ctx, member: discord.Member = None):
   
    conn = sqlite3.connect("eso.sqlite")
    cursor = conn.cursor()

    
    if member is None:
        member = ctx.author

    cursor.execute("SELECT balance, bank FROM eco WHERE user_id = ?", (member.id,))
    bal = cursor.fetchone()
    try:
        if bal:
            balance, bank = bal
        else:
            balance = 0
            bank = 0
    except Exception as e:
        print(f"Error fetching balance: {e}")
        balance = 0
        bank = 0

    user_mention = member.mention
    reply_message = f" >>> **Big World RP:earth_africa:**\n\n**–ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞** {user_mention} \n\n**–ë–∞–ª–∞–Ω—Å: {balance}:moneybag:\n\n–ë–∞–Ω–∫: {bank}:moneybag:**\n\n"
    await ctx.reply(reply_message, mention_author=False)


@bot.command(aliases=["–∫–æ–ª–ª–µ–∫—Ç", "–∫–æ–ª–µ–∫—Ç", "–ö–æ–ª–µ–∫—Ç", "Collection"])
@commands.cooldown(1, 5400, commands.BucketType.user)  
async def collect(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author

    coll_ranges = {
        "–û—á–µ–Ω—å —Å–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞": (1000000, 2000000),
        "–°–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞": (2500000, 3500000),
        "–°—Ä–µ–¥–Ω—è—è —ç–∫–æ–Ω–æ–º–∏–∫–∞": (4200000, 6000000),
        "–°–∏–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞": (8000000, 11000000),
        "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –±—É–º": (13000000, 18000000)
    }

    coll = 0

    for role in member.roles:
        if role.name in coll_ranges:
            coll = random.randint(*coll_ranges[role.name])
            break  

    if coll == 0:
        coll = random.randint(1000000, 2000000)

    conn = sqlite3.connect("eso.sqlite")
    cursor = conn.cursor()

    cursor.execute("SELECT balance FROM eco WHERE user_id = ?", (member.id,))
    bal = cursor.fetchone()

    if bal is not None:
        bal = bal[0]
    else:
        cursor.execute("INSERT INTO eco (user_id, balance, bank) VALUES (?, ?, ?)", (member.id, 0, 0))
        bal = 0

    new_bal = bal + coll 

    cursor.execute("UPDATE eco SET balance = ? WHERE user_id = ?", (new_bal, member.id))
    conn.commit()
    conn.close()

    await ctx.reply(f">>> **Big World RP:earth_africa:\n\n–°–±–æ—Ä –Ω–∞–ª–æ–≥–æ–≤\n\nn–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞:{coll}:moneybag:\n\n –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_bal}:moneybag:.**")

    if ctx.command.get_cooldown_retry_after(ctx) > 0:  
        await ctx.reply(f">>> **–¢–∏—Ö–æ, –Ω–µ —Å–ø–µ—à–∏! –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ {ctx.command.get_cooldown_retry_after(ctx):.2f} —Å–µ–∫—É–Ω–¥.**")




@bot.command()
@commands.has_role("–ì–ª–∞–≤–∞")  
async def clearbalance(ctx, member: discord.Member):
    db = sqlite3.connect("eso.sqlite")
    cursor = db.cursor()

    cursor.execute("UPDATE eco SET balance = 0 WHERE user_id = ?", (member.id,))
    db.commit()

    cursor.close()
    db.close()

    reply_message = f"**–ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ {member.mention} —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω.**"
    await ctx.send(reply_message, reference=ctx.message)

@clearbalance.error
async def clear_balance_error(ctx, error):
    if isinstance(error, commands.MissingRole):
        reply_message = "**–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.**"
        await ctx.send(reply_message, reference=ctx.message)
    elif isinstance(error, commands.BadArgument):
        reply_message = "**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–ª–∞–Ω—Å–∞.**"
        await ctx.send(reply_message, reference=ctx.message)

@bot.command(aliases=["–º—É—Ç"])
@commands.has_any_role("–ì–ª–∞–≤–∞", "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤—ã", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 1 LVL", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 3 LVL", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä 2 LVL")
@commands.has_permissions(manage_messages=True)


async def mute(ctx, member: discord.Member, duration: int, *, reason: str):
    mute_role = discord.utils.get(ctx.guild.roles, name="–úuted")  
    if not mute_role:
       
        mute_role = await ctx.guild.create_role(name="Muted")
        for channel in ctx.guild.channels:
            await channel.set_permissions(mute_role, send_messages=False)

   
    await member.add_roles(mute_role)

   
    muty_channel = discord.utils.get(ctx.guild.channels, name="„Äêüö´„Äë–Ω–∞–∫–∞–∑–∞–Ω–∏—è")
    if muty_channel:
        await muty_channel.send(f"> **{member.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}!**")

   
    await asyncio.sleep(duration)
    await member.remove_roles(mute_role)

   
    if muty_channel:
        await muty_channel.send(f"> **–ú—É—Ç —É {member.mention} –±—ã–ª —Å–Ω—è—Ç!**")

@mute.error
async def mute_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("**–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.**", reference=ctx.message)
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –º—É—Ç–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –∏ –ø—Ä–∏—á–∏–Ω—É.**", reference=ctx.message)
    elif isinstance(error, commands.BadArgument):
        await ctx.send("**–£–∫–∞–∑–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.**", reference=ctx.message)

conn = sqlite3.connect("warnings.db")
cursor = conn.cursor()


cursor.execute("""CREATE TABLE IF NOT EXISTS warnings (
                    user_id INTEGER PRIMARY KEY,
                    count INTEGER
                )""")
conn.commit()

import sqlite3


conn = sqlite3.connect("warnings.db")
cursor = conn.cursor()


cursor.execute("""CREATE TABLE IF NOT EXISTS warnings (
                    user_id INTEGER PRIMARY KEY,
                    count INTEGER
                )""")
conn.commit()

import sqlite3
import asyncio

conn = sqlite3.connect("warnings.db")
cursor = conn.cursor()

cursor.execute("""CREATE TABLE IF NOT EXISTS warnings (
                    user_id INTEGER PRIMARY KEY,
                    count INTEGER
                )""")
conn.commit()

@bot.command()
async def –ø—Ä–µ–¥(ctx, member: discord.Member, *, reason: str):
    punishments_channel = discord.utils.get(ctx.guild.channels, name="„Äêüö´„Äë–Ω–∞–∫–∞–∑–∞–Ω–∏—è")

    cursor.execute("SELECT count FROM warnings WHERE user_id = ?", (member.id,))
    result = cursor.fetchone()

    if not result:
        cursor.execute("INSERT INTO warnings (user_id, count) VALUES (?, ?)", (member.id, 0))
        conn.commit()
        count = 0
    else:
        count = result[0]

    count += 1
    cursor.execute("UPDATE warnings SET count = ? WHERE user_id = ?", (count, member.id))
    conn.commit()

    if punishments_channel:
        await punishments_channel.send(f"**{member.mention}, —É –≤–∞—Å —Ç–µ–ø–µ—Ä—å {count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –ü—Ä–∏—á–∏–Ω–∞: {reason}**")

    if count == 1:
        mute_role = discord.utils.get(ctx.guild.roles, name="Muted")
        if mute_role:
            await member.add_roles(mute_role)
            await asyncio.sleep(2400)  
            await member.remove_roles(mute_role)
            if punishments_channel:
                await punishments_channel.send(f"> **{member.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ 40 –º–∏–Ω—É—Ç –∑–∞ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}**")
    elif count == 2:
        mute_role = discord.utils.get(ctx.guild.roles, name="Muted")
        if mute_role:
            await member.add_roles(mute_role)
            await asyncio.sleep(7200) 
            await member.remove_roles(mute_role)
            if punishments_channel:
                await punishments_channel.send(f"> **{member.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ 120 –º–∏–Ω—É—Ç –∑–∞ –≤—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}**")
    elif count >= 3:
        await ctx.guild.ban(member, reason="**–¢—Ä–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è**")
        if punishments_channel:
            await punishments_channel.send(f"> **{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ —Ç—Ä–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è! –ü—Ä–∏—á–∏–Ω–∞: {reason}**")
        cursor.execute("DELETE FROM warnings WHERE user_id = ?", (member.id,))
        conn.commit()


    await ctx.send(f"**–£ {member.mention} —Ç–µ–ø–µ—Ä—å {count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.**")

@bot.command()
async def —Å–Ω—è—Ç—å–ø—Ä–µ–¥(ctx, member: discord.Member):
    punishments_channel = discord.utils.get(ctx.guild.channels, name="„Äêüö´„Äë–Ω–∞–∫–∞–∑–∞–Ω–∏—è")

    cursor.execute("SELECT count FROM warnings WHERE user_id = ?", (member.id,))
    result = cursor.fetchone()

    if result:
        count = result[0]
        if count > 0:
            count -= 1
            cursor.execute("UPDATE warnings SET count = ? WHERE user_id = ?", (count, member.id))
            conn.commit()

            if punishments_channel:
                await punishments_channel.send(f"> **{member.mention}, –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±—ã–ª–æ —Å–Ω—è—Ç–æ. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å {count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.**")

    await ctx.send(f"**–£ {member.mention} —Ç–µ–ø–µ—Ä—å {count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.**")




@bot.event
async def on_ready():
    rules_channel = discord.utils.get(bot.guilds[0].channels, name="„Äê‚õîÔ∏è„Äë–ø—Ä–∞–≤–∏–ª–∞-–ø—Ä–æ–µ–∫—Ç–∞")

    if rules_channel:
        rules_message = await rules_channel.send(
            " > **–ü—Ä–∞–≤–∏–ª–∞ –≤–æ–π–Ω—ã: 1**\n\n"
            " > **–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è: 2**\n\n"
            " > **–ü—Ä–∞–≤–∏–ª–∞ –≤–∞—Å—Å–∞–ª–æ–≤ –∏ –∞–≤—Ç–æ–Ω–æ–º–∏–∏: 3**"
        )

        await rules_message.add_reaction("1Ô∏è‚É£")
        await rules_message.add_reaction("2Ô∏è‚É£")
        await rules_message.add_reaction("3Ô∏è‚É£")

        print("–°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    else:
        print("–ö–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

@bot.event
async def on_reaction_add(reaction, user):
    if user.bot == False and reaction.message.channel.name == "„Äê‚õîÔ∏è„Äë–ø—Ä–∞–≤–∏–ª–∞-–ø—Ä–æ–µ–∫—Ç–∞":
        if str(reaction.emoji) == "1Ô∏è‚É£":
            rule_text = "–ü—Ä–∞–≤–∏–ª–∞ –≤–æ–π–Ω—ã: ..."
        elif str(reaction.emoji) == "2Ô∏è‚É£":
            rule_text = """ >>> **–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è: –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è: –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è: 2 –†–∞–∑–¥–µ–ª: –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞
1.1. –í —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ–±—Å—É–∂–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º—ã. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –º—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç.
1.2. –í —Ç–µ–∫—Å—Ç–æ–≤–æ–º —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å —Ä–æ–¥–Ω—ã—Ö –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –º—É—Ç –æ—Ç 30 –º–∏–Ω—É—Ç –¥–æ –±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤(–ü–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞).
1.3. –ó–∞–ø—Ä–µ—â–µ–Ω —Å–ø–∞–º. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –º—É—Ç –Ω–∞ 1 —á–∞—Å.
1.4. –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ —á–∞—Ç–µ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –æ—Ç 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–æ –±–∞–Ω–∞ –Ω–∞ 2 –¥–Ω—è.(–ü–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
1.5. –ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –ø–æ —Ç–∏–ø—É "Free 50$ to Steam:"–°–∫–∞–º —Å—Å—ã–ª–∫–∞". –ù–∞–∫–∞–∑–∞–Ω–∏–µ: 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
1.6. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –ú—É—Ç –Ω–∞ 2 —á–∞—Å–∞.
1.7. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –Ω–∞—à –ø—Ä–æ–µ–∫—Ç. –ù–∞–∫–∞–∑–∞–Ω–∏–µ: –û—Ç 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–æ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞(–ü–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞).**"""
        elif str(reaction.emoji) == "3Ô∏è‚É£":
            rule_text = "–ü—Ä–∞–≤–∏–ª–∞ –≤–∞—Å—Å–∞–ª–æ–≤ –∏ –∞–≤—Ç–æ–Ω–æ–º–∏–∏: ..."
        
        rule_message = await user.send(rule_text)
        await asyncio.sleep(500)
        await rule_message.delete()

        await reaction.remove(user)
@bot.command()
async def pay(ctx, recipient: discord.Member, amount: int, *, comment: str = None):
    if amount <= 0:
        await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ –∏–ª–∏ –Ω–æ–ª—å.")
        return

    try:
        db = sqlite3.connect("eso.sqlite")
        cursor = db.cursor()

 
        cursor.execute("SELECT balance FROM eco WHERE user_id = ?", (ctx.author.id,))
        sender_balance = cursor.fetchone()

        if sender_balance is None or sender_balance[0] < amount:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.")
            return

     
        cursor.execute("SELECT balance FROM eco WHERE user_id = ?", (recipient.id,))
        recipient_balance = cursor.fetchone()

        if recipient_balance is None:
            cursor.execute("INSERT INTO eco (user_id, balance, bank) VALUES (?, ?, 0)", (recipient.id, 0))
            db.commit()
            recipient_balance = (0,)
        else:
            recipient_balance = recipient_balance[0]

     
        sender_new_balance = sender_balance[0] - amount
        recipient_new_balance = recipient_balance + amount


        cursor.execute("UPDATE eco SET balance = ? WHERE user_id = ?", (sender_new_balance, ctx.author.id))
        cursor.execute("UPDATE eco SET balance = ? WHERE user_id = ?", (recipient_new_balance, recipient.id))
        db.commit()

      
        if comment:
            await ctx.send(f"–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ {amount} –µ–¥–∏–Ω–∏—Ü –≤–∞–ª—é—Ç—ã –∏–≥—Ä–æ–∫—É {recipient.mention}. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")
        else:
            await ctx.send(f"–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ {amount} –µ–¥–∏–Ω–∏—Ü –≤–∞–ª—é—Ç—ã –∏–≥—Ä–æ–∫—É {recipient.mention}.")
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        db.close()

        @bot.event
        async def on_member_join(member):
    
            async for entry in member.guild.audit_logs(action=discord.AuditLogAction.invite_create, limit=5):
                if entry.target == member:
                    inviter = entry.user
                break
            else:
             inviter = None

    
    if inviter:
        conn = sqlite3.connect("eso.sqlite")
        cursor = conn.cursor()

        
        cursor.execute("SELECT balance FROM eco WHERE user_id = ?", (inviter.id,))
        inviter_balance = cursor.fetchone()
        if inviter_balance:
            balance = inviter_balance[0] + 2000000
        else:
            balance = 2000000  

        
        cursor.execute("INSERT OR REPLACE INTO eco (user_id, balance, bank) VALUES (?, ?, 0)", (inviter.id, balance))
        conn.commit()

       
        inviter_user = bot.get_user(inviter.id)
        if inviter_user:
            await inviter_user.send(f"**–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ {member.name} –Ω–∞ —Å–µ—Ä–≤–µ—Ä! –í–∞—à –±–∞–ª–∞–Ω—Å —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ 2–∫–∫ –∫—Ä–µ–¥–∏—Ç–æ–≤.**")

    
    await member.send(f"**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª {inviter.name if inviter else '–∫—Ç–æ-—Ç–æ'}. **")
                      
import sqlite3

@bot.command()
async def –≤–ª–æ–∂–∏—Ç—å(ctx, category: str, amount: int):
    roles = {
        "–û—á–µ–Ω—å —Å–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞‚õîÔ∏è": (25000000, 25000001),
        "–°–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞üö®": (40000000, 40000001),
        "–°—Ä–µ–¥–Ω—è—è —ç–∫–æ–Ω–æ–º–∏–∫–∞üöß": (60000000, 60000001),
        "–°–∏–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞üíπ": (80000000, 80000001),
        "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –±—É–ºüí∏": (130000000, 130000001)
    }

    category_lower = category.lower()
    if category_lower != "economy":
        await ctx.send(">>> **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `economy`.**")
        return

    current_role = None
    for role in ctx.author.roles:
        if role.name in roles:
            current_role = role.name
            break

    if current_role is None:
        await ctx.send(">>> **–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∞—Ç—å —Å —Ä–æ–ª–∏ –æ—á–µ–Ω—å —Å–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞.**")
        return

    if current_role != "–û—á–µ–Ω—å —Å–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞‚õîÔ∏è":
        await ctx.send(">>> **–í—ã —É–∂–µ –≤–ª–æ–∂–µ–Ω—ã –≤ —ç–∫–æ–Ω–æ–º–∏–∫—É –∏ –∏–º–µ–µ—Ç–µ –¥—Ä—É–≥—É—é —Ä–æ–ª—å.**")
        return

    current_range = roles[current_role]
    if not isinstance(current_range, tuple):
        await ctx.send(">>> **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–æ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.**")
        return
    
    min_amount, max_amount = current_range

    if amount < min_amount or amount > max_amount:
        await ctx.send(f">>> **–°—É–º–º–∞ –≤–∫–ª–∞–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–∂–¥—É {min_amount} –∏ {max_amount}.**")
        return

    
    conn = sqlite3.connect("eso.sqlite")
    cursor = conn.cursor()

    cursor.execute("SELECT balance FROM eco WHERE user_id = ?", (ctx.author.id,))
    user_balance = cursor.fetchone()

    if user_balance is None:
        cursor.execute("INSERT INTO eco (user_id, balance) VALUES (?, ?)", (ctx.author.id, 0))
        user_balance = (0,)

    if user_balance[0] < amount:
        await ctx.send(f">>> **{ctx.author.mention}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è {amount}.**")
        cursor.close()
        conn.close()
        return

    new_balance = user_balance[0] - amount
    cursor.execute("UPDATE eco SET balance = ? WHERE user_id = ?", (new_balance, ctx.author.id))
    conn.commit()

    await ctx.send(f">>> **{ctx.author.mention}, –≤–∞—à –≤–∫–ª–∞–¥ –≤ —ç–∫–æ–Ω–æ–º–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω. –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –±—ã–ª–æ —Å–ø–∏—Å–∞–Ω–æ {amount}.**")

    cursor.close()
    conn.close()


@bot.command()
@commands.has_any_role("–ì–ª–∞–≤–∞", "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤—ã", "–°–ª–µ–¥—è—â–∏–π –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º")
async def clear_channel(ctx):
    channel = ctx.channel
    await channel.purge()
    await ctx.send("–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.", delete_after=5)  

@bot.command()
@commands.has_any_role("–ì–ª–∞–≤–∞", "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤—ã", "–°–ª–µ–¥—è—â–∏–π –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º")
async def limit(ctx, char_limit: int):
    channel = ctx.channel
    await ctx.message.delete() 

    def check(message):
        return len(message.content) < char_limit and message.author != bot.user

    await ctx.send(f">>> **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {char_limit} —Å–∏–º–≤–æ–ª–æ–≤.**", delete_after=10)

    while True:
        try:
            message = await bot.wait_for("message", check=check, timeout=60)  
            await ctx.send(f">>> **{message.author.mention}, –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ –≤–∞—à—É —Å—Ç—Ä–∞–Ω—É –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º {char_limit} —Å–∏–º–≤–æ–ª–æ–≤.**", delete_after=10)
            await message.delete()  
        except asyncio.TimeoutError:
            break 

@bot.command()
@commands.has_any_role("–ì–ª–∞–≤–∞", "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤—ã", "–°–ª–µ–¥—è—â–∏–π –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–πüìÉ")
async def —Ä–µ–≥(ctx, member: discord.Member):
    if not ctx.author.guild_permissions.manage_roles:
        await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

 
    roles_to_assign = [
        ".................................–°—Ç–∞—Ç—É—Å.................................",
        "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æüö©",
        "–û—á–µ–Ω—å —Å–ª–∞–±–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞‚õîÔ∏è",
        ".................................–£—Ä–æ–≤–µ–Ω—å –∂–∏–∑–Ω–∏.................................",
        ".................................–≠–∫–æ–Ω–æ–º–∏–∫–∞.................................",
        "–£–∂–∞—Å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∂–∏–∑–Ω–∏üÜò",
        ".................................–ú–µ–¥–∏—Ü–∏–Ω–∞.................................",
        "–û—á–µ–Ω—å —É–∂–∞—Å–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞‚ôøÔ∏è",
        ".................................–ù–∞—É–∫–∞.................................",
        "–£–∂–∞—Å–Ω–∞—è –Ω–∞—É–∫–∞üë©‚Äçüî¨",
        ".................................–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ.................................",
        "–£–∂–∞—Å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µüë®‚Äçüè´",
        ".................................–ü—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å.................................",
        "–û—á–µ–Ω—å –æ–ø–∞—Å–Ω–∞—è –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—åüö®",
        ".................................–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞.................................",
        "–£–∂–∞—Å–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞üöß",
        ".................................–≠–∫–æ–ª–æ–≥–∏—è.................................",
        "–£–∂–∞—Å–Ω–∞—è —ç–∫–æ–ª–æ–≥–∏—èüåÑ",



        
    ]

    for role_name in roles_to_assign:
        role = discord.utils.get(ctx.guild.roles, name=role_name)
        if role:
            try:
                await member.add_roles(role)
                await ctx.send(f"–†–æ–ª—å {role.name} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}.")
            except discord.Forbidden:
                await ctx.send(f"–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ {role.name}.")
            except discord.HTTPException:
                await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏ {role.name}.")
        else:
            await ctx.send(f"–†–æ–ª—å {role_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")


with open("key.txt","r") as token:
    bot.run(token.read())
